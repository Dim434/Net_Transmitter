<?xml version="1.0"?>
<nodes><node><value>\PEAR2\Net\Transmitter\Exception</value><id>Exception.html#\PEAR2\Net\Transmitter\Exception</id><type>interface</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::$filters</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::$filters</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::$position</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::$position</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::append()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::append()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::insertBefore()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::insertBefore()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::removeAt()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::removeAt()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::clear()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::clear()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::count()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::count()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::rewind()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::rewind()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::seek()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::seek()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::getCurrentPosition()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::getCurrentPosition()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::next()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::next()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::key()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::key()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::current()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::current()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::prev()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::prev()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::end()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::end()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\FilterCollection::valid()</value><id>FilterCollection.html#\PEAR2\Net\Transmitter\FilterCollection::valid()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\LockException::__construct()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getMessage()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getMessage()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getCode()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getCode()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getFile()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getFile()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getLine()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getLine()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getTrace()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getTrace()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getPrevious()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getPrevious()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::getTraceAsString()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::getTraceAsString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\LockException::__toString()</value><id>LockException.html#\PEAR2\Net\Transmitter\LockException::__toString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_NONE</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_NONE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_RECEIVE</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_RECEIVE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_SEND</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_SEND</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_ALL</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::DIRECTION_ALL</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::$stream</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::$stream</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::$persist</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::$persist</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::$chunkSize</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::$chunkSize</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isDataAwaiting()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isDataAwaiting()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::setBuffer()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::setBuffer()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::shutdown()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::shutdown()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::__construct()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isStream()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isFresh()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isFresh()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isPersistent()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isPersistent()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::setTimeout()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::setTimeout()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::setChunk()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::setChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::getChunk()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::getChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::send()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::send()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::receive()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::receive()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::receiveStream()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::receiveStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isAvailable()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isAvailable()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::isAcceptingData()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::isAcceptingData()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::__destruct()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::__destruct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::close()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::close()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\NetworkStream::createException()</value><id>NetworkStream.html#\PEAR2\Net\Transmitter\NetworkStream::createException()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::$error_no</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::$error_no</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::$error_str</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::$error_str</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::__construct()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getSocketErrorNumber()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getSocketErrorNumber()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getSocketErrorMessage()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getSocketErrorMessage()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::__toString()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::__toString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getMessage()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getMessage()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getCode()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getCode()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getFile()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getFile()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getLine()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getLine()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getTrace()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getTrace()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getPrevious()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getPrevious()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\SocketException::getTraceAsString()</value><id>SocketException.html#\PEAR2\Net\Transmitter\SocketException::getTraceAsString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\Stream::DIRECTION_NONE</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::DIRECTION_NONE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\Stream::DIRECTION_RECEIVE</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::DIRECTION_RECEIVE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\Stream::DIRECTION_SEND</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::DIRECTION_SEND</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\Stream::DIRECTION_ALL</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::DIRECTION_ALL</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\Stream::$stream</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::$stream</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\Stream::$persist</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::$persist</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\Stream::$chunkSize</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::$chunkSize</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\Stream::__construct()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isStream()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isFresh()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isFresh()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isPersistent()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isPersistent()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::setTimeout()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::setTimeout()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::setBuffer()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::setBuffer()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::setChunk()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::setChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::getChunk()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::getChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::send()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::send()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::receive()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::receive()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::receiveStream()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::receiveStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isAvailable()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isAvailable()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isDataAwaiting()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isDataAwaiting()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::isAcceptingData()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::isAcceptingData()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::__destruct()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::__destruct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::close()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::close()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\Stream::createException()</value><id>Stream.html#\PEAR2\Net\Transmitter\Stream::createException()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::__construct()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getMessage()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getMessage()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getCode()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getCode()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getFile()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getFile()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getLine()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getLine()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getTrace()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getTrace()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getPrevious()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getPrevious()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::getTraceAsString()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::getTraceAsString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\StreamException::__toString()</value><id>StreamException.html#\PEAR2\Net\Transmitter\StreamException::__toString()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::DIRECTION_NONE</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::DIRECTION_NONE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::DIRECTION_RECEIVE</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::DIRECTION_RECEIVE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::DIRECTION_SEND</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::DIRECTION_SEND</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::DIRECTION_ALL</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::DIRECTION_ALL</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$error_no</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$error_no</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$error_str</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$error_str</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$shmHandler</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$shmHandler</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$lockState</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$lockState</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$uri</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$uri</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$stream</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$stream</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$persist</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$persist</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::$chunkSize</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::$chunkSize</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::__construct()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::createException()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::createException()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::lock()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::lock()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::send()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::send()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::receive()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::receive()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::receiveStream()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::receiveStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isDataAwaiting()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isDataAwaiting()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::setBuffer()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::setBuffer()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::shutdown()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::shutdown()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isStream()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isFresh()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isFresh()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isPersistent()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isPersistent()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::setTimeout()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::setTimeout()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::setChunk()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::setChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::getChunk()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::getChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isAvailable()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isAvailable()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::isAcceptingData()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::isAcceptingData()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::__destruct()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::__destruct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpClient::close()</value><id>TcpClient.html#\PEAR2\Net\Transmitter\TcpClient::close()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection</id><type>class</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_NONE</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_NONE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_RECEIVE</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_RECEIVE</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_SEND</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_SEND</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_ALL</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::DIRECTION_ALL</id><type>constant</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::$peerIP</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::$peerIP</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::$peerPort</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::$peerPort</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::$stream</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::$stream</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::$persist</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::$persist</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::$chunkSize</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::$chunkSize</id><type>property</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::__construct()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::__construct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::getPeerIP()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::getPeerIP()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::getPeerPort()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::getPeerPort()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::createException()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::createException()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isDataAwaiting()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isDataAwaiting()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::setBuffer()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::setBuffer()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::shutdown()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::shutdown()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isStream()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isFresh()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isFresh()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isPersistent()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isPersistent()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::setTimeout()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::setTimeout()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::setChunk()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::setChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::getChunk()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::getChunk()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::send()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::send()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::receive()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::receive()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::receiveStream()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::receiveStream()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isAvailable()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isAvailable()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::isAcceptingData()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::isAcceptingData()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::__destruct()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::__destruct()</id><type>method</type></node><node><value>\PEAR2\Net\Transmitter\TcpServerConnection::close()</value><id>TcpServerConnection.html#\PEAR2\Net\Transmitter\TcpServerConnection::close()</id><type>method</type></node></nodes>
