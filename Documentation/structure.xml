<?xml version="1.0"?>
<project version="0.14.1" title="PEAR2_Net_Transmitter documentation">
  <file path="\Autoload.php" hash="b9a586c6468ec7bc192850a7dded96d8" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <function namespace="PEAR2\Net\RouterOS" line="33" package="PEAR2_Net_Transmitter">
      <name>autoload</name>
      <type>function</type>
      <docblock>
        <description>Loads a specified class.</description>
        <long-description>&lt;p&gt;Loads a specified class from the namespace.&lt;/p&gt;
</long-description>
        <tag name="param" description="The classname (with namespace) to load." type="string" variable="$class" line="24">
          <type by_reference="false">string</type>
        </tag>
        <tag name="return" description="" type="void" line="24">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="33">
        <name>$class</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="\Client.php" hash="3153e6a37a89e2e95819d0b0cc0309d7" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="35" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Client</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\Client</full_name>
      <docblock>
        <description>A RouterOS client.</description>
        <long-description>&lt;p&gt;Provides functionality for easily communicating with a RouterOS host.&lt;/p&gt;
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <constant namespace="PEAR2\Net\RouterOS" line="41" package="PEAR2_Net_Transmitter">
        <name>FILTER_CALLBACK</name>
        <value>1</value>
        <docblock>
          <description>Used in {@link isRequestActive()} to limit search only to requests
that have a callback.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="46" package="PEAR2_Net_Transmitter">
        <name>FILTER_BUFFER</name>
        <value>2</value>
        <docblock>
          <description>Used in {@link isRequestActive()} to limit search only to requests
that use the buffer.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="50" package="PEAR2_Net_Transmitter">
        <name>FILTER_ALL</name>
        <value>3</value>
        <docblock>
          <description>Used in {@link isRequestActive()} to indicate no limit in search.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="55" package="PEAR2_Net_Transmitter">
        <name>$com</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The communicator for this client." type="\PEAR2\Net\RouterOS\Communicator" line="52">
            <type by_reference="false">\PEAR2\Net\RouterOS\Communicator</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" package="PEAR2_Net_Transmitter">
        <name>$pendingRequestsCount</name>
        <default>0</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The number of currently pending requests." type="int" line="57">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="PEAR2_Net_Transmitter">
        <name>$responseBuffer</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array of responses that have not yet been extracted or passed to a callback. Key is the tag of the request, and the value is an array of associated responses." type="array" line="62">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="PEAR2_Net_Transmitter">
        <name>$callbacks</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array of callbacks to be executed as responses come. Key is the tag of the request, and the value is the callback for it." type="array" line="69">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="78" package="PEAR2_Net_Transmitter">
        <name>$_streamResponses</name>
        <default>false</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="Whether to stream future responses." type="bool" line="75">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="100" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Opens a new instance of a RouterOS API client.</description>
          <long-description>&lt;p&gt;Opens a new instance of a RouterOS API client with the specified
settings.&lt;/p&gt;
</long-description>
          <tag name="param" description="Hostname (IP or domain) of the RouterOS server." type="string" variable="$host" line="80">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The RouterOS username." type="string" variable="$username" line="80">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The RouterOS password." type="string" variable="$password" line="80">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The port on which the RouterOS server provides the API service." type="int" variable="$port" line="80">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="Whether or not the connection should be a persistent one." type="bool" variable="$persist" line="80">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="param" description="The timeout for the connection." type="float" variable="$timeout" line="80">
            <type by_reference="false">float</type>
          </tag>
          <tag name="param" description="A context for the socket." type="resource" variable="$context" line="80">
            <type by_reference="false">resource</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendSync()" refers="\PEAR2\Net\RouterOS\sendSync()" line="80"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendAsync()" refers="\PEAR2\Net\RouterOS\sendAsync()" line="80"/>
        </docblock>
        <argument line="100">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$password</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="100">
          <name>$port</name>
          <default>8728</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$persist</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$timeout</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="101">
          <name>$context</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="126" package="PEAR2_Net_Transmitter">
        <name>login</name>
        <docblock>
          <description>Login to a RouterOS connection.</description>
          <long-description>
</long-description>
          <tag name="param" description="The communicator to attempt to login to." type="\PEAR2\Net\RouterOS\Communicator" variable="$com" line="117">
            <type by_reference="false">\PEAR2\Net\RouterOS\Communicator</type>
          </tag>
          <tag name="param" description="The RouterOS username." type="string" variable="$username" line="117">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The RouterOS password." type="string" variable="$password" line="117">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="TRUE on success, FALSE on failure." type="bool" line="117">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$com</name>
          <default/>
          <type>Communicator</type>
        </argument>
        <argument line="126">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="126">
          <name>$password</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="177" package="PEAR2_Net_Transmitter">
        <name>setCharset</name>
        <docblock>
          <description>Sets the charset(s) for this connection.</description>
          <long-description>&lt;p&gt;Sets the charset(s) for this connection. The specified charset(s) will be
used for all future requests and responses. When sending,
{@link Communicator::CHARSET_LOCAL} is converted to
{@link Communicator::HARSET_REMOTE}, and when receiving,
{@link Communicator::CHARSET_REMOTE} is converted to
{@link Communicator::CHARSET_LOCAL}. Setting NULL to either charset will
disable charset convertion, and data will be both sent and received "as
is".&lt;/p&gt;
</long-description>
          <tag name="param" description="The charset to set. If $charsetType is {@link Communicator::CHARSET_ALL}, you can supply either a string to use for all charsets, or an array with the charset types as keys, and the charsets as values." type="mixed" variable="$charset" line="152">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="param" description="Which charset to set. Valid values are the Communicator::CHARSET_* constants. Any other value is treated as {@link Communicator::CHARSET_ALL}." type="int" variable="$charsetType" line="152">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The old charset. If $charsetType is {@link Communicator::CHARSET_ALL}, the old values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="152">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\Communicator::setDefaultCharset()" refers="\PEAR2\Net\RouterOS\Communicator::setDefaultCharset()" line="152"/>
        </docblock>
        <argument line="178">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$charsetType</name>
          <default>Communicator::CHARSET_ALL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="195" package="PEAR2_Net_Transmitter">
        <name>getCharset</name>
        <docblock>
          <description>Gets the charset(s) for this connection.</description>
          <long-description>
</long-description>
          <tag name="param" description="Which charset to get. Valid values are the Communicator::CHARSET_* constants. Any other value is treated as {@link Communicator::CHARSET_ALL}." type="int" variable="$charsetType" line="183">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The current charset. If $charsetType is {@link Communicator::CHARSET_ALL}, the current values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="183">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setCharset()" refers="\PEAR2\Net\RouterOS\setCharset()" line="183"/>
        </docblock>
        <argument line="195">
          <name>$charsetType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="216" package="PEAR2_Net_Transmitter">
        <name>sendAsync</name>
        <docblock>
          <description>Sends a request and waits for responses.</description>
          <long-description>
</long-description>
          <tag name="param" description="The request to send." type="\PEAR2\Net\RouterOS\Request" variable="$request" line="200">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="param" description="Optional. A function that is to be executed when new responses for this request are available. The callback takes two parameters. The {@link Response} object as the first, and the {@link Client} object as the second one. If the function returns TRUE, the request is canceled. Note that the callback may be executed one last time after that with a response that notifies about the canceling." type="callback" variable="$callback" line="200">
            <type by_reference="false">callback</type>
          </tag>
          <tag name="return" description="The client object." type="\PEAR2\Net\RouterOS\Client" line="200">
            <type by_reference="false">\PEAR2\Net\RouterOS\Client</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\completeRequest()" refers="\PEAR2\Net\RouterOS\completeRequest()" line="200"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\loop()" refers="\PEAR2\Net\RouterOS\loop()" line="200"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\cancelRequest()" refers="\PEAR2\Net\RouterOS\cancelRequest()" line="200"/>
        </docblock>
        <argument line="216">
          <name>$request</name>
          <default/>
          <type>Request</type>
        </argument>
        <argument line="216">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="257" package="PEAR2_Net_Transmitter">
        <name>isRequestActive</name>
        <docblock>
          <description>Checks if a request is active.</description>
          <long-description>&lt;p&gt;Checks if a request is active. A request is considered active if it's a
pending request and/or has responses that are not yet extracted.&lt;/p&gt;
</long-description>
          <tag name="param" description="The tag of the request to look for." type="string" variable="$tag" line="243">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="One of the FILTER_* consntants. Limits the search to the specified places." type="int" variable="$filter" line="243">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="TRUE if the request is active, FALSE otherwise." type="bool" line="243">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getPendingRequestsCount()" refers="\PEAR2\Net\RouterOS\getPendingRequestsCount()" line="243"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\completeRequest()" refers="\PEAR2\Net\RouterOS\completeRequest()" line="243"/>
        </docblock>
        <argument line="257">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="257">
          <name>$filter</name>
          <default>self::FILTER_ALL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="278" package="PEAR2_Net_Transmitter">
        <name>sendSync</name>
        <docblock>
          <description>Sends a request and gets the full response.</description>
          <long-description>
</long-description>
          <tag name="param" description="The request to send." type="\PEAR2\Net\RouterOS\Request" variable="$request" line="269">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="return" description="The received responses as a collection." type="\PEAR2\Net\RouterOS\ResponseCollection" line="269">
            <type by_reference="false">\PEAR2\Net\RouterOS\ResponseCollection</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendAsync()" refers="\PEAR2\Net\RouterOS\sendAsync()" line="269"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\close()" refers="\PEAR2\Net\RouterOS\close()" line="269"/>
        </docblock>
        <argument line="278">
          <name>$request</name>
          <default/>
          <type>Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="298" package="PEAR2_Net_Transmitter">
        <name>completeRequest</name>
        <docblock>
          <description>Completes a specified request.</description>
          <long-description>&lt;p&gt;Starts an event loop for the RouterOS callbacks and finishes when a
specified request is completed.&lt;/p&gt;
</long-description>
          <tag name="param" description="The tag of the request to complete. Setting NULL completes all requests." type="string" variable="$tag" line="284">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="A collection of {@link Response} objects that haven't been passed to a callback function or previously extracted with {@link extractNewResponses()}. Returns an empty collection when $tag is set to NULL (responses can still be extracted)." type="\PEAR2\Net\RouterOS\ResponseCollection" line="284">
            <type by_reference="false">\PEAR2\Net\RouterOS\ResponseCollection</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$tag</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="338" package="PEAR2_Net_Transmitter">
        <name>extractNewResponses</name>
        <docblock>
          <description>Extracts responses for a request.</description>
          <long-description>&lt;p&gt;Gets all new responses for a request that haven't been passed to a
callback and clears the buffer from them.&lt;/p&gt;
</long-description>
          <tag name="param" description="The tag of the request to extract new responses for. Specifying NULL with extract new responses for all requests." type="string" variable="$tag" line="325">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="A collection of {@link Response} objects for the specified request." type="\PEAR2\Net\RouterOS\ResponseCollection" line="325">
            <type by_reference="false">\PEAR2\Net\RouterOS\ResponseCollection</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\loop()" refers="\PEAR2\Net\RouterOS\loop()" line="325"/>
        </docblock>
        <argument line="338">
          <name>$tag</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="383" package="PEAR2_Net_Transmitter">
        <name>loop</name>
        <docblock>
          <description>Starts an event loop for the RouterOS callbacks.</description>
          <long-description>&lt;p&gt;Starts an event loop for the RouterOS callbacks and finishes when there
are no more pending requests or when a specified timeout has passed
(whichever comes first).&lt;/p&gt;
</long-description>
          <tag name="param" description="Timeout for the loop. If 0, there is no time limit." type="float" variable="$timeout" line="369">
            <type by_reference="false">float</type>
          </tag>
          <tag name="return" description="TRUE when there are any more pending requests, FALSE otherwise." type="bool" line="369">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\extractNewResponses()" refers="\PEAR2\Net\RouterOS\extractNewResponses()" line="369"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\getPendingRequestsCount()" refers="\PEAR2\Net\RouterOS\getPendingRequestsCount()" line="369"/>
        </docblock>
        <argument line="383">
          <name>$timeout</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="403" package="PEAR2_Net_Transmitter">
        <name>getPendingRequestsCount</name>
        <docblock>
          <description>Gets the number of pending requests.</description>
          <long-description>
</long-description>
          <tag name="return" description="The number of pending requests." type="int" line="397">
            <type by_reference="false">int</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\isRequestActive()" refers="\PEAR2\Net\RouterOS\isRequestActive()" line="397"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="424" package="PEAR2_Net_Transmitter">
        <name>cancelRequest</name>
        <docblock>
          <description>Cancels a request.</description>
          <long-description>&lt;p&gt;Cancels an active request. Using this function in favor of a plain call
to the "/cancel" command is highly reccomended, as it also updates the
counter of pending requests properly. Note that canceling a request also
removes any responses for it that were not previously extracted with
{@link extractNewResponses()}.&lt;/p&gt;
</long-description>
          <tag name="param" description="Tag of the request to cancel. Setting NULL will cancel all requests." type="string" variable="$tag" line="408">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The client object." type="\PEAR2\Net\RouterOS\Client" line="408">
            <type by_reference="false">\PEAR2\Net\RouterOS\Client</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendAsync()" refers="\PEAR2\Net\RouterOS\sendAsync()" line="408"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\close()" refers="\PEAR2\Net\RouterOS\close()" line="408"/>
        </docblock>
        <argument line="424">
          <name>$tag</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="467" package="PEAR2_Net_Transmitter">
        <name>setStreamResponses</name>
        <docblock>
          <description>Sets response streaming setting.</description>
          <long-description>&lt;p&gt;Sets whether future responses are streamed. If responses are streamed,
the argument values are returned as streams instead of strings. This is
particularly useful if you expect a response that may contain one or more
very large words.&lt;/p&gt;
</long-description>
          <tag name="param" description="Whether to stream future responses." type="bool" variable="$streamResponses" line="454">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="return" description="The previous value of the setting." type="bool" line="454">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getStreamResponses()" refers="\PEAR2\Net\RouterOS\getStreamResponses()" line="454"/>
        </docblock>
        <argument line="467">
          <name>$streamResponses</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="482" package="PEAR2_Net_Transmitter">
        <name>getStreamResponses</name>
        <docblock>
          <description>Gets response streaming setting.</description>
          <long-description>&lt;p&gt;Gets whether future responses are streamed.&lt;/p&gt;
</long-description>
          <tag name="return" description="The value of the setting." type="bool" line="474">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setStreamResponses()" refers="\PEAR2\Net\RouterOS\setStreamResponses()" line="474"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="496" package="PEAR2_Net_Transmitter">
        <name>close</name>
        <docblock>
          <description>Closes the opened connection, even if it is a persistent one.</description>
          <long-description>&lt;p&gt;Closes the opened connection, even if it is a persistent one. Note that
{@link extractNewResponses()} can still be used to extract responses
collected prior to the closing.&lt;/p&gt;
</long-description>
          <tag name="return" description="TRUE on success, FALSE on failure." type="bool" line="487">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="520" package="PEAR2_Net_Transmitter">
        <name>send</name>
        <docblock>
          <description>Sends a request to RouterOS.</description>
          <long-description>
</long-description>
          <tag name="param" description="The request to send." type="\PEAR2\Net\RouterOS\Request" variable="$request" line="511">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="return" description="The client object." type="\PEAR2\Net\RouterOS\Client" line="511">
            <type by_reference="false">\PEAR2\Net\RouterOS\Client</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendSync()" refers="\PEAR2\Net\RouterOS\sendSync()" line="511"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendAsync()" refers="\PEAR2\Net\RouterOS\sendAsync()" line="511"/>
        </docblock>
        <argument line="520">
          <name>$request</name>
          <default/>
          <type>Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="535" package="PEAR2_Net_Transmitter">
        <name>dispatchNextResponse</name>
        <docblock>
          <description>Dispatches the next response in queue.</description>
          <long-description>&lt;p&gt;Dispatches the next response in queue, i.e. it executes the associated
callback if there is one, or places the response in the response buffer.&lt;/p&gt;
</long-description>
          <tag name="return" description="The dispatched response." type="\PEAR2\Net\RouterOS\Response" line="527">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\Communicator.php" hash="cdde39e88d4b7d93480ba9f52467d6f8" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <namespace-alias name="T">PEAR2\Net\Transmitter</namespace-alias>
    <class final="false" abstract="false" line="45" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Communicator</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\Communicator</full_name>
      <docblock>
        <description>A RouterOS communicator.</description>
        <long-description>&lt;p&gt;Implementation of the RouterOS API protocol. Unlike the other classes in this
package, this class doesn't provide any conviniences beyond the low level
implementation details (automatic word length encoding/decoding, charset
translation and data integrity), and because of that, its direct usage is
strongly discouraged.&lt;/p&gt;
</long-description>
        <tag name="category" description="Net" line="29"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="29"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="29"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="29"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="29"/>
        <tag name="see" description="\PEAR2\Net\RouterOS\Client" refers="\PEAR2\Net\RouterOS\Client" line="29"/>
      </docblock>
      <constant namespace="PEAR2\Net\RouterOS" line="50" package="PEAR2_Net_Transmitter">
        <name>CHARSET_ALL</name>
        <value>-1</value>
        <docblock>
          <description>Used when getting/setting all (default) charsets.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="59" package="PEAR2_Net_Transmitter">
        <name>CHARSET_REMOTE</name>
        <value>0</value>
        <docblock>
          <description>Used when getting/setting the (default) remote charset.</description>
          <long-description>&lt;p&gt;The remote charset is the charset in which RouterOS stores its data.
If you want to keep compatibility with your Winbox, this charset should
match the default charset from your Windows' regional settings.&lt;/p&gt;
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="68" package="PEAR2_Net_Transmitter">
        <name>CHARSET_LOCAL</name>
        <value>1</value>
        <docblock>
          <description>Used when getting/setting the (default) local charset.</description>
          <long-description>&lt;p&gt;The local charset is the charset in which the data from RouterOS will be
returned as. This charset should match the charset of the place the data
will eventually be written to.&lt;/p&gt;
</long-description>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="protected" line="74" package="PEAR2_Net_Transmitter">
        <name>$defaultCharsets</name>
        <default>array(
        self::CHARSET_REMOTE =&gt; null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with the default charset types as keys, and the default charsets as values." type="array" line="70">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" package="PEAR2_Net_Transmitter">
        <name>$charsets</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with the current charset types as keys, and the current charsets as values." type="array" line="79">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="PEAR2_Net_Transmitter">
        <name>$trans</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The transmitter for the connection." type="\PEAR2\Net\RouterOS\SocketClientTransmitter" line="85">
            <type by_reference="false">\PEAR2\Net\RouterOS\SocketClientTransmitter</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="105" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a new connection with the specified options.</description>
          <long-description>
</long-description>
          <tag name="param" description="Hostname (IP or domain) of the RouterOS server." type="string" variable="$host" line="90">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The port on which the RouterOS server provides the API service." type="int" variable="$port" line="90">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="Whether or not the connection should be a persistent one." type="bool" variable="$persist" line="90">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="param" description="The timeout for the connection." type="float" variable="$timeout" line="90">
            <type by_reference="false">float</type>
          </tag>
          <tag name="param" description="A string that uniquely identifies the connection." type="string" variable="$key" line="90">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="A context for the socket." type="resource" variable="$context" line="90">
            <type by_reference="false">resource</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendWord()" refers="\PEAR2\Net\RouterOS\sendWord()" line="90"/>
        </docblock>
        <argument line="105">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="105">
          <name>$port</name>
          <default>8728</default>
          <type/>
        </argument>
        <argument line="105">
          <name>$persist</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$timeout</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$key</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$context</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="126" package="PEAR2_Net_Transmitter">
        <name>iconvStream</name>
        <docblock>
          <description>Uses iconv to convert a stream from one charset to another.</description>
          <long-description>
</long-description>
          <tag name="param" description="The charset of the stream." type="string" variable="$in_charset" line="116">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The desired resulting charset." type="string" variable="$out_charset" line="116">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The stream to convert." type="resource" variable="$stream" line="116">
            <type by_reference="false">resource</type>
          </tag>
          <tag name="return" description="A new stream that uses the $out_charset. The stream is a subset from the original stream, from its current position to its end." type="resource" line="116">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$in_charset</name>
          <default/>
          <type/>
        </argument>
        <argument line="126">
          <name>$out_charset</name>
          <default/>
          <type/>
        </argument>
        <argument line="126">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="163" package="PEAR2_Net_Transmitter">
        <name>setDefaultCharset</name>
        <docblock>
          <description>Sets the default charset(s) for new connections.</description>
          <long-description>
</long-description>
          <tag name="param" description="The charset to set. If $charsetType is {@link CHARSET_ALL}, you can supply either a string to use for all charsets, or an array with the charset types as keys, and the charsets as values." type="mixed" variable="$charset" line="147">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="param" description="Which charset to set. Valid values are the CHARSET_* constants. Any other value is treated as {@link CHARSET_ALL}." type="int" variable="$charsetType" line="147">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The old charset. If $charsetType is {@link CHARSET_ALL}, the old values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="147">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setCharset()" refers="\PEAR2\Net\RouterOS\setCharset()" line="147"/>
        </docblock>
        <argument line="164">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
        <argument line="164">
          <name>$charsetType</name>
          <default>self::CHARSET_ALL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="190" package="PEAR2_Net_Transmitter">
        <name>getDefaultCharset</name>
        <docblock>
          <description>Gets the default charset(s).</description>
          <long-description>
</long-description>
          <tag name="param" description="Which charset to get. Valid values are the CHARSET_* constants. Any other value is treated as {@link CHARSET_ALL}." type="int" variable="$charsetType" line="179">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The current charset. If $charsetType is {@link CHARSET_ALL}, the current values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="179">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setDefaultCharset()" refers="\PEAR2\Net\RouterOS\setDefaultCharset()" line="179"/>
        </docblock>
        <argument line="190">
          <name>$charsetType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="219" package="PEAR2_Net_Transmitter">
        <name>setCharset</name>
        <docblock>
          <description>Sets the charset(s) for this connection.</description>
          <long-description>&lt;p&gt;Sets the charset(s) for this connection. The specified charset(s) will be
used for all future words. When sending, {@link CHARSET_LOCAL} is
converted to {@link CHARSET_REMOTE}, and when receiving,
{@link CHARSET_REMOTE} is converted to {@link CHARSET_LOCAL}. Setting
NULL to either charset will disable charset convertion, and data will be
both sent and received "as is".&lt;/p&gt;
</long-description>
          <tag name="param" description="The charset to set. If $charsetType is {@link CHARSET_ALL}, you can supply either a string to use for all charsets, or an array with the charset types as keys, and the charsets as values." type="mixed" variable="$charset" line="196">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="param" description="Which charset to set. Valid values are the Communicator::CHARSET_* constants. Any other value is treated as {@link CHARSET_ALL}." type="int" variable="$charsetType" line="196">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The old charset. If $charsetType is {@link CHARSET_ALL}, the old values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="196">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setDefaultCharset()" refers="\PEAR2\Net\RouterOS\setDefaultCharset()" line="196"/>
        </docblock>
        <argument line="219">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
        <argument line="219">
          <name>$charsetType</name>
          <default>self::CHARSET_ALL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="246" package="PEAR2_Net_Transmitter">
        <name>getCharset</name>
        <docblock>
          <description>Gets the charset(s) for this connection.</description>
          <long-description>
</long-description>
          <tag name="param" description="Which charset to get. Valid values are the CHARSET_* constants. Any other value is treated as {@link CHARSET_ALL}." type="int" variable="$charsetType" line="234">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The current charset. If $charsetType is {@link CHARSET_ALL}, the current values will be returned as an array with the types as keys, and charsets as values." type="string|array" line="234">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getDefaultCharset()" refers="\PEAR2\Net\RouterOS\getDefaultCharset()" line="234"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\setCharset()" refers="\PEAR2\Net\RouterOS\setCharset()" line="234"/>
        </docblock>
        <argument line="246">
          <name>$charsetType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="258" package="PEAR2_Net_Transmitter">
        <name>getTransmitter</name>
        <docblock>
          <description>Gets the transmitter for this connection.</description>
          <long-description>
</long-description>
          <tag name="return" description="The transmitter for this connection." type="\PEAR2\Net\Transmitter\SocketClientTransmitter" line="252">
            <type by_reference="false">\PEAR2\Net\Transmitter\SocketClientTransmitter</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="274" package="PEAR2_Net_Transmitter">
        <name>sendWord</name>
        <docblock>
          <description>Sends a word.</description>
          <long-description>&lt;p&gt;Sends a word and automatically encodes its length when doing so.&lt;/p&gt;
</long-description>
          <tag name="param" description="The word to send." type="string" variable="$word" line="263">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The number of bytes sent." type="int" line="263">
            <type by_reference="false">int</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendWordFromStream()" refers="\PEAR2\Net\RouterOS\sendWordFromStream()" line="263"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\getNextWord()" refers="\PEAR2\Net\RouterOS\getNextWord()" line="263"/>
        </docblock>
        <argument line="274">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="304" package="PEAR2_Net_Transmitter">
        <name>sendWordFromStream</name>
        <docblock>
          <description>Sends a word based on a stream.</description>
          <long-description>&lt;p&gt;Sends a word based on a stream and automatically encodes its length when
doing so. The stream is read from its current position to its end, and
then returned to its current position. Because of those operations, the
supplied stream must be seekable.&lt;/p&gt;
</long-description>
          <tag name="param" description="A string to prepend before the stream contents." type="string" variable="$prefix" line="290">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The stream to send." type="resource" variable="$stream" line="290">
            <type by_reference="false">resource</type>
          </tag>
          <tag name="return" description="The number of bytes sent." type="int" line="290">
            <type by_reference="false">int</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\sendWord()" refers="\PEAR2\Net\RouterOS\sendWord()" line="290"/>
        </docblock>
        <argument line="304">
          <name>$prefix</name>
          <default/>
          <type/>
        </argument>
        <argument line="304">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" line="350" package="PEAR2_Net_Transmitter">
        <name>verifyLengthSupport</name>
        <docblock>
          <description>Verifies that the length is supported.</description>
          <long-description>&lt;p&gt;Verifies if the specified length is supported by the API. Throws a
{@link LengthException} if that's not the case. Currently, RouterOS
supports words up to 0xFFFFFFF in length, so that's the only check
performed.&lt;/p&gt;
</long-description>
          <tag name="param" description="The length to verify." type="int" variable="$length" line="338">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="" type="void" line="338">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="367" package="PEAR2_Net_Transmitter">
        <name>encodeLength</name>
        <docblock>
          <description>Encodes the length as requred by the RouterOS API.</description>
          <long-description>
</long-description>
          <tag name="param" description="The length to encode" type="int" variable="$length" line="360">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The encoded length" type="string" line="360">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="403" package="PEAR2_Net_Transmitter">
        <name>getNextWord</name>
        <docblock>
          <description>Get the next word in queue as a string.</description>
          <long-description>&lt;p&gt;Get the next word in queue as a string, after automatically decoding its
length.&lt;/p&gt;
</long-description>
          <tag name="return" description="The word." type="string" line="394">
            <type by_reference="false">string</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\close()" refers="\PEAR2\Net\RouterOS\close()" line="394"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="427" package="PEAR2_Net_Transmitter">
        <name>getNextWordAsStream</name>
        <docblock>
          <description>Get the next word in queue as a stream.</description>
          <long-description>&lt;p&gt;Get the next word in queue as a stream, after automatically decoding its
length.&lt;/p&gt;
</long-description>
          <tag name="return" description="The word, as a stream." type="resource" line="418">
            <type by_reference="false">resource</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\close()" refers="\PEAR2\Net\RouterOS\close()" line="418"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="455" package="PEAR2_Net_Transmitter">
        <name>decodeLength</name>
        <docblock>
          <description>Decodes the lenght of the incoming message.</description>
          <long-description>&lt;p&gt;Decodes the lenght of the incoming message, as specified by the RouterOS
API.&lt;/p&gt;
</long-description>
          <tag name="param" description="The transmitter from which to decode the length of the incoming message." type="\PEAR2\Net\Transmitter\StreamTransmitter" variable="$trans" line="444">
            <type by_reference="false">\PEAR2\Net\Transmitter\StreamTransmitter</type>
          </tag>
          <tag name="return" description="The decoded length" type="int" line="444">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="455">
          <name>$trans</name>
          <default/>
          <type>StreamTransmitter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="485" package="PEAR2_Net_Transmitter">
        <name>close</name>
        <docblock>
          <description>Closes the opened connection, even if it is a persistent one.</description>
          <long-description>
</long-description>
          <tag name="return" description="TRUE on success, FALSE on failure." type="bool" line="480">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\DataFlowException.php" hash="edcefda4b2154f510ac77acd0ee79b12" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>DataFlowException</name>
      <extends>\RuntimeException</extends>
      <full_name>\PEAR2\Net\RouterOS\DataFlowException</full_name>
      <docblock>
        <description>Exception thrown when the request/response cycle goes an unexpected way.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
    </class>
  </file>
  <file path="\Exception.php" hash="630c85faa1b470a9bd7cd0fc9a8b9d27" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <interface namespace="PEAR2\Net\RouterOS" line="33" package="PEAR2\Net\RouterOS">
      <name>Exception</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\Exception</full_name>
      <docblock>
        <description>Generic exception class of this package.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
    </interface>
  </file>
  <file path="\InvalidArgumentException.php" hash="0dc58b0d4c996888150996424e514480" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>InvalidArgumentException</name>
      <extends>\InvalidArgumentException</extends>
      <full_name>\PEAR2\Net\RouterOS\InvalidArgumentException</full_name>
      <docblock>
        <description>Exception thrown when there's something wrong with message parts.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
    </class>
  </file>
  <file path="\LengthtException.php" hash="c47067838c98d6dd0e971c73a960f4d2" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>LengthException</name>
      <extends>\LengthException</extends>
      <full_name>\PEAR2\Net\RouterOS\LengthException</full_name>
      <docblock>
        <description>Exception thrown when there is a problem with a word's length.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
      <property final="false" static="false" visibility="private" line="40" package="PEAR2_Net_Transmitter">
        <name>$_length</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The unsuppported value." type="mixed" line="36">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="51" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a new LengthException.</description>
          <long-description>
</long-description>
          <tag name="param" description="The Exception message to throw." type="string" variable="$message" line="42">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The Exception code." type="int" variable="$code" line="42">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="The previous exception used for the exception chaining." type="\PEAR2\Net\RouterOS\Exception" variable="$previous" line="42">
            <type by_reference="false">\PEAR2\Net\RouterOS\Exception</type>
          </tag>
          <tag name="param" description="The length." type="\PEAR2\Net\RouterOS\number" variable="$value" line="42">
            <type by_reference="false">\PEAR2\Net\RouterOS\number</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$previous</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="52">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="63" package="PEAR2_Net_Transmitter">
        <name>getLength</name>
        <docblock>
          <description>Gets the length.</description>
          <long-description>
</long-description>
          <tag name="return" description="The length." type="\PEAR2\Net\RouterOS\number" line="58">
            <type by_reference="false">\PEAR2\Net\RouterOS\number</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="76" package="PEAR2_Net_Transmitter">
        <name>__toString</name>
        <docblock>
          <description>Returns a string representation of the exception.</description>
          <long-description>
</long-description>
          <tag name="return" description="The exception as a string." type="string" line="71">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\Message.php" hash="1309a16297d0c5e059b99be5936ff0eb" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <namespace-alias name="T">PEAR2\Net\Transmitter</namespace-alias>
    <class final="false" abstract="true" line="38" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Message</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\Message</full_name>
      <docblock>
        <description>Represents a RouterOS message.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="29"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="29"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="29"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="29"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="29"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="PEAR2_Net_Transmitter">
        <name>$arguments</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with message arguments. Keys are the names of the arguments, array values are values for the corresponding argument." type="array" line="41">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" package="PEAR2_Net_Transmitter">
        <name>$_tag</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An optional tag to associate the message with." type="string" line="47">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="59" package="PEAR2_Net_Transmitter">
        <name>sanitizeArgumentName</name>
        <docblock>
          <description>Sanitizes a name of an argument (message or query one).</description>
          <long-description>
</long-description>
          <tag name="param" description="The name to sanitize." type="mixed" variable="$name" line="52">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="return" description="The sanitized name." type="string" line="52">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="79" package="PEAR2_Net_Transmitter">
        <name>sanitizeArgumentValue</name>
        <docblock>
          <description>Sanitizes a value of an argument (message or query one).</description>
          <long-description>
</long-description>
          <tag name="param" description="The value to sanitize." type="mixed" variable="$value" line="72">
            <type by_reference="false">mixed</type>
          </tag>
          <tag name="return" description="The sanitized value." type="string" line="72">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="100" package="PEAR2_Net_Transmitter">
        <name>getTag</name>
        <docblock>
          <description>Gets the tag that the message is associated with.</description>
          <long-description>
</long-description>
          <tag name="return" description="The current tag or NULL if there isn't a tag." type="string" line="94">
            <type by_reference="false">string</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setTag()" refers="\PEAR2\Net\RouterOS\setTag()" line="94"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="116" package="PEAR2_Net_Transmitter">
        <name>setTag</name>
        <docblock>
          <description>Sets the tag to associate the request with.</description>
          <long-description>&lt;p&gt;Sets the tag to associate the message with. Setting NULL erases the
currently set tag.&lt;/p&gt;
</long-description>
          <tag name="param" description="The tag to set." type="string" variable="$tag" line="105">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The message object." type="\PEAR2\Net\RouterOS\Message" line="105">
            <type by_reference="false">\PEAR2\Net\RouterOS\Message</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getTag()" refers="\PEAR2\Net\RouterOS\getTag()" line="105"/>
        </docblock>
        <argument line="116">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="131" package="PEAR2_Net_Transmitter">
        <name>getArgument</name>
        <docblock>
          <description>Gets the value of an argument.</description>
          <long-description>
</long-description>
          <tag name="param" description="The name of the argument." type="string" variable="$name" line="122">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The value of the specified argument. Returns NULL if such an argument is not set." type="string|resource" line="122">
            <type by_reference="false">string</type>
            <type by_reference="false">resource</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setArgument()" refers="\PEAR2\Net\RouterOS\setArgument()" line="122"/>
        </docblock>
        <argument line="131">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="148" package="PEAR2_Net_Transmitter">
        <name>getAllArguments</name>
        <docblock>
          <description>Gets all arguments in an array.</description>
          <long-description>
</long-description>
          <tag name="return" description="An array with the keys as argument names, and the array values as argument values." type="array" line="140">
            <type by_reference="false">array</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getArgument()" refers="\PEAR2\Net\RouterOS\getArgument()" line="140"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\setArgument()" refers="\PEAR2\Net\RouterOS\setArgument()" line="140"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="163" package="PEAR2_Net_Transmitter">
        <name>setArgument</name>
        <docblock>
          <description>Sets an argument for the message.</description>
          <long-description>
</long-description>
          <tag name="param" description="Name of the argument." type="string" variable="$name" line="153">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="Value of the argument. Setting the value to NULL removes an argument of this name." type="string" variable="$value" line="153">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The message object." type="\PEAR2\Net\RouterOS\Message" line="153">
            <type by_reference="false">\PEAR2\Net\RouterOS\Message</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getArgument()" refers="\PEAR2\Net\RouterOS\getArgument()" line="153"/>
        </docblock>
        <argument line="163">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="179" package="PEAR2_Net_Transmitter">
        <name>removeAllArguments</name>
        <docblock>
          <description>Removes all arguments from the message.</description>
          <long-description>
</long-description>
          <tag name="return" description="The message object." type="\PEAR2\Net\RouterOS\Message" line="174">
            <type by_reference="false">\PEAR2\Net\RouterOS\Message</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\NotSupportedException.php" hash="60bb260d232cbf6275b13be17535211b" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="34" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>NotSupportedException</name>
      <extends>\Exception</extends>
      <full_name>\PEAR2\Net\RouterOS\NotSupportedException</full_name>
      <docblock>
        <description>Exception thrown when encountering something not supported by RouterOS or
this package.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
      <property final="false" static="false" visibility="private" line="41" package="PEAR2_Net_Transmitter">
        <name>$_value</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The unsuppported value." type="mixed" line="37">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a new NotSupportedException.</description>
          <long-description>
</long-description>
          <tag name="param" description="The Exception message to throw." type="string" variable="$message" line="43">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The Exception code." type="int" variable="$code" line="43">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="The previous exception used for the exception chaining." type="\PEAR2\Net\RouterOS\Exception" variable="$previous" line="43">
            <type by_reference="false">\PEAR2\Net\RouterOS\Exception</type>
          </tag>
          <tag name="param" description="The unsupported value." type="mixed" variable="$value" line="43">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="52">
          <name>$previous</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="53">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="64" package="PEAR2_Net_Transmitter">
        <name>getValue</name>
        <docblock>
          <description>Gets the unsupported value.</description>
          <long-description>
</long-description>
          <tag name="return" description="The unsupported value." type="mixed" line="59">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="77" package="PEAR2_Net_Transmitter">
        <name>__toString</name>
        <docblock>
          <description>Returns a string representation of the exception.</description>
          <long-description>
</long-description>
          <tag name="return" description="The exception as a string." type="string" line="72">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\Query.php" hash="4b33142b88a522822fcd36f63850f145" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Query</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\Query</full_name>
      <docblock>
        <description>Represents a query for RouterOS requests.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <constant namespace="PEAR2\Net\RouterOS" line="39" package="PEAR2_Net_Transmitter">
        <name>ACTION_EXIST</name>
        <value>''</value>
        <docblock>
          <description>Checks if the property exists.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="44" package="PEAR2_Net_Transmitter">
        <name>ACTION_NOT_EXIST</name>
        <value>'-'</value>
        <docblock>
          <description>Checks if the property does not exist.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="49" package="PEAR2_Net_Transmitter">
        <name>ACTION_EQUALS</name>
        <value>'='</value>
        <docblock>
          <description>Checks if the property equals a certain value.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="54" package="PEAR2_Net_Transmitter">
        <name>ACTION_LESS_THAN</name>
        <value>'&lt;'</value>
        <docblock>
          <description>Checks if the property is less than a certain value.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="59" package="PEAR2_Net_Transmitter">
        <name>ACTION_GREATHER_THAN</name>
        <value>'&gt;'</value>
        <docblock>
          <description>Checks if the property is greather than a certain value.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="66" package="PEAR2_Net_Transmitter">
        <name>$words</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array of the words forming the query. Each value is an array with the first member being the predicate (action and name), and the second member being the value for the predicate." type="array" line="61">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" line="72" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>This class is not to be instantiated normally, but by static methods
instead. Use {@link where()} to create an instance of it.</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" line="84" package="PEAR2_Net_Transmitter">
        <name>sanitizeAction</name>
        <docblock>
          <description>Sanitizes the action of a condition.</description>
          <long-description>
</long-description>
          <tag name="param" description="The action to sanitize." type="string" variable="$action" line="77">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The sanitized action." type="string" line="77">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="112" package="PEAR2_Net_Transmitter">
        <name>where</name>
        <docblock>
          <description>Creates a new query with an initial condition.</description>
          <long-description>
</long-description>
          <tag name="param" description="The name of the property to test." type="string" variable="$name" line="101">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The value to test against. Not required for existence tests." type="string" variable="$value" line="101">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="One of the ACTION_* constants. Describes the operation to perform." type="string" variable="$action" line="101">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The query object." type="\PEAR2\Net\RouterOS\Query" line="101">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="113">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$action</name>
          <default>self::ACTION_EXIST</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="124" package="PEAR2_Net_Transmitter">
        <name>not</name>
        <docblock>
          <description>Negates the query.</description>
          <long-description>
</long-description>
          <tag name="return" description="The query object." type="\PEAR2\Net\RouterOS\Query" line="119">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="141" package="PEAR2_Net_Transmitter">
        <name>orWhere</name>
        <docblock>
          <description>Adds a condition as an alternative to the query.</description>
          <long-description>
</long-description>
          <tag name="param" description="The name of the property to test." type="string" variable="$name" line="130">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The value to test against. Not required for existence tests." type="string" variable="$value" line="130">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="One of the ACTION_* constants. Describes the operation to perform." type="string" variable="$action" line="130">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The query object." type="\PEAR2\Net\RouterOS\Query" line="130">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="141">
          <name>$action</name>
          <default>self::ACTION_EXIST</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="158" package="PEAR2_Net_Transmitter">
        <name>andWhere</name>
        <docblock>
          <description>Adds a condition in addition to the query.</description>
          <long-description>
</long-description>
          <tag name="param" description="The name of the property to test." type="string" variable="$name" line="147">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The value to test against. Not required for existence tests." type="string" variable="$value" line="147">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="One of the ACTION_* constants. Describes the operation to perform." type="string" variable="$action" line="147">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The query object." type="\PEAR2\Net\RouterOS\Query" line="147">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="158">
          <name>$action</name>
          <default>self::ACTION_EXIST</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="171" package="PEAR2_Net_Transmitter">
        <name>send</name>
        <docblock>
          <description>Sends the query over a communicator.</description>
          <long-description>
</long-description>
          <tag name="param" description="The communicator to send the query over." type="\PEAR2\Net\RouterOS\Communicator" variable="$com" line="164">
            <type by_reference="false">\PEAR2\Net\RouterOS\Communicator</type>
          </tag>
          <tag name="return" description="The number of bytes sent." type="int" line="164">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$com</name>
          <default/>
          <type>Communicator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="207" package="PEAR2_Net_Transmitter">
        <name>addWhere</name>
        <docblock>
          <description>Adds a condition.</description>
          <long-description>
</long-description>
          <tag name="param" description="The name of the property to test." type="string" variable="$name" line="196">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The value to test against. Not required for existence tests." type="string" variable="$value" line="196">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="One of the ACTION_* constants. Describes the operation to perform." type="string" variable="$action" line="196">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The query object." type="\PEAR2\Net\RouterOS\Query" line="196">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="\Request.php" hash="0e936d6ce763ec4160e94dc8a448c9c1" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Request</name>
      <extends>\PEAR2\Net\RouterOS\Message</extends>
      <full_name>\PEAR2\Net\RouterOS\Request</full_name>
      <docblock>
        <description>Represents a RouterOS request.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39" package="PEAR2_Net_Transmitter">
        <name>$_command</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The command to be executed." type="string" line="36">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" package="PEAR2_Net_Transmitter">
        <name>$_query</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="A query for the command." type="\PEAR2\Net\RouterOS\Query" line="41">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a request to send to RouterOS.</description>
          <long-description>
</long-description>
          <tag name="param" description="The command to send." type="string" variable="$command" line="46">
            <type by_reference="false">string</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setCommand()" refers="\PEAR2\Net\RouterOS\setCommand()" line="46"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\setArgument()" refers="\PEAR2\Net\RouterOS\setArgument()" line="46"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\setTag()" refers="\PEAR2\Net\RouterOS\setTag()" line="46"/>
        </docblock>
        <argument line="55">
          <name>$command</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="PEAR2_Net_Transmitter">
        <name>setCommand</name>
        <docblock>
          <description>Sets the command to send to RouterOS.</description>
          <long-description>&lt;p&gt;Sets the command to send to RouterOS. The command can use the API or CLI
syntax of RouterOS, but either way, it must be absolute (begin  with a
"/") and without arguments.&lt;/p&gt;
</long-description>
          <tag name="param" description="The command to send." type="string" variable="$command" line="60">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The request object." type="\PEAR2\Net\RouterOS\Request" line="60">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getCommand()" refers="\PEAR2\Net\RouterOS\getCommand()" line="60"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\setArgument()" refers="\PEAR2\Net\RouterOS\setArgument()" line="60"/>
        </docblock>
        <argument line="73">
          <name>$command</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="118" package="PEAR2_Net_Transmitter">
        <name>getCommand</name>
        <docblock>
          <description>Gets the command that will be send to RouterOS.</description>
          <long-description>&lt;p&gt;Gets the command that will be send to RouterOS in its API syntax.&lt;/p&gt;
</long-description>
          <tag name="return" description="The command to send." type="string" line="110">
            <type by_reference="false">string</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setCommand()" refers="\PEAR2\Net\RouterOS\setCommand()" line="110"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="132" package="PEAR2_Net_Transmitter">
        <name>setQuery</name>
        <docblock>
          <description>Sets the query to send with the command.</description>
          <long-description>
</long-description>
          <tag name="param" description="The query to be set. Setting NULL will remove the currently associated query." type="\PEAR2\Net\RouterOS\Query" variable="$query" line="123">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
          <tag name="return" description="The request object." type="\PEAR2\Net\RouterOS\Request" line="123">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getQuery()" refers="\PEAR2\Net\RouterOS\getQuery()" line="123"/>
        </docblock>
        <argument line="132">
          <name>$query</name>
          <default>null</default>
          <type>Query</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="144" package="PEAR2_Net_Transmitter">
        <name>getQuery</name>
        <docblock>
          <description>Gets the currently associated query</description>
          <long-description>
</long-description>
          <tag name="return" description="The currently associated query." type="\PEAR2\Net\RouterOS\Query" line="138">
            <type by_reference="false">\PEAR2\Net\RouterOS\Query</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setQuery()" refers="\PEAR2\Net\RouterOS\setQuery()" line="138"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="160" package="PEAR2_Net_Transmitter">
        <name>setTag</name>
        <docblock>
          <description>Sets the tag to associate the request with.</description>
          <long-description>&lt;p&gt;Sets the tag to associate the request with. Setting NULL erases the
currently set tag.&lt;/p&gt;
</long-description>
          <tag name="param" description="The tag to set." type="string" variable="$tag" line="149">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The request object." type="\PEAR2\Net\RouterOS\Request" line="149">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getTag()" refers="\PEAR2\Net\RouterOS\getTag()" line="149"/>
        </docblock>
        <argument line="160">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="PEAR2_Net_Transmitter">
        <name>setArgument</name>
        <docblock>
          <description>Sets an argument for the request.</description>
          <long-description>
</long-description>
          <tag name="param" description="Name of the argument." type="string" variable="$name" line="165">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="Value of the argument. Setting the value to NULL removes an argument of this name." type="string" variable="$value" line="165">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The request object." type="\PEAR2\Net\RouterOS\Request" line="165">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getArgument()" refers="\PEAR2\Net\RouterOS\getArgument()" line="165"/>
        </docblock>
        <argument line="175">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="175">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="185" package="PEAR2_Net_Transmitter">
        <name>removeAllArguments</name>
        <docblock>
          <description>Removes all arguments from the request.</description>
          <long-description>
</long-description>
          <tag name="return" description="The request object." type="\PEAR2\Net\RouterOS\Request" line="180">
            <type by_reference="false">\PEAR2\Net\RouterOS\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="199" package="PEAR2_Net_Transmitter">
        <name>send</name>
        <docblock>
          <description>Sends a request over a communicator.</description>
          <long-description>
</long-description>
          <tag name="param" description="The communicator to send the request over." type="\PEAR2\Net\RouterOS\Communicator" variable="$com" line="190">
            <type by_reference="false">\PEAR2\Net\RouterOS\Communicator</type>
          </tag>
          <tag name="return" description="The number of bytes sent." type="int" line="190">
            <type by_reference="false">int</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\Client::sendSync()" refers="\PEAR2\Net\RouterOS\Client::sendSync()" line="190"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\Client::sendAsync()" refers="\PEAR2\Net\RouterOS\Client::sendAsync()" line="190"/>
        </docblock>
        <argument line="199">
          <name>$com</name>
          <default/>
          <type>Communicator</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="\Response.php" hash="fc0fc9acdc2cd047a02ee3b66aeba58f" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>Response</name>
      <extends>\PEAR2\Net\RouterOS\Message</extends>
      <full_name>\PEAR2\Net\RouterOS\Response</full_name>
      <docblock>
        <description>Represents a RouterOS response.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <constant namespace="PEAR2\Net\RouterOS" line="39" package="PEAR2_Net_Transmitter">
        <name>TYPE_FINAL</name>
        <value>'!done'</value>
        <docblock>
          <description>The last response for a request.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="44" package="PEAR2_Net_Transmitter">
        <name>TYPE_DATA</name>
        <value>'!re'</value>
        <docblock>
          <description>A response with data.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="49" package="PEAR2_Net_Transmitter">
        <name>TYPE_ERROR</name>
        <value>'!trap'</value>
        <docblock>
          <description>A response signifying error.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <constant namespace="PEAR2\Net\RouterOS" line="55" package="PEAR2_Net_Transmitter">
        <name>TYPE_FATAL</name>
        <value>'!fatal'</value>
        <docblock>
          <description>A response signifying a fatal error, due to which the connection would be
terminated.</description>
          <long-description>
</long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="60" package="PEAR2_Net_Transmitter">
        <name>$unrecognizedWords</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array of unrecognized words in network order." type="array" line="57">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="65" package="PEAR2_Net_Transmitter">
        <name>$_type</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The response type." type="string" line="62">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="78" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Extracts a new response from a communicator.</description>
          <long-description>
</long-description>
          <tag name="param" description="The communicator from which to extract the new response." type="\PEAR2\Net\RouterOS\Communicator" variable="$com" line="67">
            <type by_reference="false">\PEAR2\Net\RouterOS\Communicator</type>
          </tag>
          <tag name="param" description="Whether to populate the argument values with streams instead of strings." type="bool" variable="$asStream" line="67">
            <type by_reference="false">bool</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getType()" refers="\PEAR2\Net\RouterOS\getType()" line="67"/>
          <tag name="see" description="\PEAR2\Net\RouterOS\getArgument()" refers="\PEAR2\Net\RouterOS\getArgument()" line="67"/>
        </docblock>
        <argument line="78">
          <name>$com</name>
          <default/>
          <type>Communicator</type>
        </argument>
        <argument line="78">
          <name>$asStream</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="143" package="PEAR2_Net_Transmitter">
        <name>setType</name>
        <docblock>
          <description>Sets the response type.</description>
          <long-description>&lt;p&gt;Sets the response type. Valid values are the TYPE_* constants.&lt;/p&gt;
</long-description>
          <tag name="param" description="The new response type." type="string" variable="$type" line="133">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="The response object." type="\PEAR2\Net\RouterOS\Response" line="133">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\getType()" refers="\PEAR2\Net\RouterOS\getType()" line="133"/>
        </docblock>
        <argument line="143">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="165" package="PEAR2_Net_Transmitter">
        <name>getType</name>
        <docblock>
          <description>Gets the response type.</description>
          <long-description>
</long-description>
          <tag name="return" description="The response type." type="string" line="159">
            <type by_reference="false">string</type>
          </tag>
          <tag name="see" description="\PEAR2\Net\RouterOS\setType()" refers="\PEAR2\Net\RouterOS\setType()" line="159"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="PEAR2_Net_Transmitter">
        <name>getUnrecognizedWords</name>
        <docblock>
          <description>Gets a list of unrecognized words.</description>
          <long-description>
</long-description>
          <tag name="return" description="The list of unrecognized words." type="array" line="170">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="\ResponseCollection.php" hash="99f11c03347cae6e7400da14fce30957" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>ResponseCollection</name>
      <extends/>
      <full_name>\PEAR2\Net\RouterOS\ResponseCollection</full_name>
      <docblock>
        <description>Represents a collection of RouterOS responses.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\ArrayAccess</implements>
      <implements>\SeekableIterator</implements>
      <implements>\Countable</implements>
      <property final="false" static="false" visibility="protected" line="39" package="PEAR2_Net_Transmitter">
        <name>$responses</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with all {@link Response} objects." type="array" line="36">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" package="PEAR2_Net_Transmitter">
        <name>$responseTypes</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with each {@link Response} object's type." type="array" line="41">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="PEAR2_Net_Transmitter">
        <name>$responseTags</name>
        <default>array(</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with each {@link Response} object's tag." type="array" line="46">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="PEAR2_Net_Transmitter">
        <name>$argumentMap</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="An array with all distinct arguments across all {@link Response} objects. Created at the first call of {@link getArgumentMap()}." type="array" line="51">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="PEAR2_Net_Transmitter">
        <name>$position</name>
        <default>0</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="A pointer, as required by SeekableIterator." type="int" line="58">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a new collection.</description>
          <long-description>
</long-description>
          <tag name="param" description="An array of responses, in network order." type="array" variable="$responses" line="63">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$responses</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="85" package="PEAR2_Net_Transmitter">
        <name>toArray</name>
        <docblock>
          <description>Gets the whole collection as an array.</description>
          <long-description>
</long-description>
          <tag name="return" description="An array with all responses, in network order." type="array" line="80">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="95" package="PEAR2_Net_Transmitter">
        <name>count</name>
        <docblock>
          <description>Counts the responses in the collection.</description>
          <long-description>
</long-description>
          <tag name="return" description="The number of responses in the collection." type="int" line="90">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="107" package="PEAR2_Net_Transmitter">
        <name>offsetExists</name>
        <docblock>
          <description>Checks if an offset exists.</description>
          <long-description>
</long-description>
          <tag name="param" description="The offset to check." type="int" variable="$offset" line="100">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="TRUE if the offset exists, FALSE otherwise." type="bool" line="100">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="119" package="PEAR2_Net_Transmitter">
        <name>offsetGet</name>
        <docblock>
          <description>Gets a {@link Response} from a specified offset.</description>
          <long-description>
</long-description>
          <tag name="param" description="The offset of the desired response." type="int" variable="$offset" line="112">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The response at the specified offset." type="\PEAR2\Net\RouterOS\Response" line="112">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="135" package="PEAR2_Net_Transmitter">
        <name>offsetSet</name>
        <docblock>
          <description>N/A</description>
          <long-description>&lt;p&gt;This method exists only because it is required for ArrayAccess. The
collection is read only.&lt;/p&gt;
</long-description>
          <tag name="param" description="N/A" type="int" variable="$offset" line="124">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="N/A" type="\PEAR2\Net\RouterOS\Response" variable="$value" line="124">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
          <tag name="return" description="" type="void" line="124">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
        <argument line="135">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="151" package="PEAR2_Net_Transmitter">
        <name>offsetUnset</name>
        <docblock>
          <description>N/A</description>
          <long-description>&lt;p&gt;This method exists only because it is required for ArrayAccess. The
collection is read only.&lt;/p&gt;
</long-description>
          <tag name="param" description="N/A" type="int" variable="$offset" line="141">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="" type="void" line="141">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="162" package="PEAR2_Net_Transmitter">
        <name>rewind</name>
        <docblock>
          <description>Resets the pointer to 0, and returns the first response.</description>
          <long-description>
</long-description>
          <tag name="return" description="The first response in the collection, or FALSE if the collection is empty." type="\PEAR2\Net\RouterOS\Response" line="156">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="PEAR2_Net_Transmitter">
        <name>seek</name>
        <docblock>
          <description>Moves the position pointer to a specified position.</description>
          <long-description>
</long-description>
          <tag name="param" description="The position to move to." type="int" variable="$position" line="167">
            <type by_reference="false">int</type>
          </tag>
          <tag name="return" description="The {@link Response} at the specified position, or FALSE if the specified position is not valid." type="\PEAR2\Net\RouterOS\Response" line="167">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="187" package="PEAR2_Net_Transmitter">
        <name>next</name>
        <docblock>
          <description>Moves the pointer forward by 1, and gets the next response.</description>
          <long-description>
</long-description>
          <tag name="return" description="The next {@link Response} object, or FALSE if the position is not valid." type="\PEAR2\Net\RouterOS\Response" line="181">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="199" package="PEAR2_Net_Transmitter">
        <name>current</name>
        <docblock>
          <description>Gets the response at the current pointer position.</description>
          <long-description>
</long-description>
          <tag name="return" description="The response at the current pointer position, or FALSE if the position is not valid." type="\PEAR2\Net\RouterOS\Response" line="193">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="210" package="PEAR2_Net_Transmitter">
        <name>key</name>
        <docblock>
          <description>Gets the key at the current pointer position.</description>
          <long-description>
</long-description>
          <tag name="return" description="The key at the current pointer position, i.e. the pointer position itself, or FALSE if the position is not valid." type="int" line="204">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="220" package="PEAR2_Net_Transmitter">
        <name>valid</name>
        <docblock>
          <description>Checks if the pointer is still pointing to an existing offset.</description>
          <long-description>
</long-description>
          <tag name="return" description="TRUE if the pointer is valid, FALSE otherwise." type="bool" line="215">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="233" package="PEAR2_Net_Transmitter">
        <name>getArgumentMap</name>
        <docblock>
          <description>Gets all distinct argument names.</description>
          <long-description>&lt;p&gt;Gets all distinct argument names across all responses.&lt;/p&gt;
</long-description>
          <tag name="return" description="An array with all distinct argument names as keys, and the indexes at which they occur as values." type="array" line="225">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="259" package="PEAR2_Net_Transmitter">
        <name>getAllOfType</name>
        <docblock>
          <description>Gets all responses of a specified type.</description>
          <long-description>
</long-description>
          <tag name="param" description="The response type to filter by. Valid values are the Response::TYPE_* constants." type="string" variable="$type" line="250">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="A new collection with responses of the specified type." type="\PEAR2\Net\RouterOS\ResponseCollection" line="250">
            <type by_reference="false">\PEAR2\Net\RouterOS\ResponseCollection</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="276" package="PEAR2_Net_Transmitter">
        <name>getAllTagged</name>
        <docblock>
          <description>Gets all responses with a specified tag.</description>
          <long-description>
</long-description>
          <tag name="param" description="The tag to filter by." type="string" variable="$tag" line="268">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="A new collection with responses having the specified tag." type="\PEAR2\Net\RouterOS\ResponseCollection" line="268">
            <type by_reference="false">\PEAR2\Net\RouterOS\ResponseCollection</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="290" package="PEAR2_Net_Transmitter">
        <name>getLast</name>
        <docblock>
          <description>Gets the last {@link Response} in the collection.</description>
          <long-description>
</long-description>
          <tag name="return" description="The last response in the collection." type="\PEAR2\Net\RouterOS\Response" line="285">
            <type by_reference="false">\PEAR2\Net\RouterOS\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="307" package="PEAR2_Net_Transmitter">
        <name>__call</name>
        <docblock>
          <description>Calls a method of the response pointed by the pointer.</description>
          <long-description>&lt;p&gt;Calls a method of the response pointed by the pointer. This is a magic
PHP method, thanks to which any function you call on the collection that
is not defined will be redirected to the response.&lt;/p&gt;
</long-description>
          <tag name="param" description="The name of the method to call." type="string" variable="$method" line="295">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The arguments to pass to the method." type="array" variable="$args" line="295">
            <type by_reference="false">array</type>
          </tag>
          <tag name="return" description="Whatever the called function returns." type="mixed" line="295">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="307">
          <name>$args</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="\SocketException.php" hash="36dd1f2bffa3843b4147ec5d91e4e6fd" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="33" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>SocketException</name>
      <extends>\RuntimeException</extends>
      <full_name>\PEAR2\Net\RouterOS\SocketException</full_name>
      <docblock>
        <description>Exception thrown when something goes wrong with the connection.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
    </class>
  </file>
  <file path="\UnexpectedValueException.php" hash="64b2b784a577730dc5ba5f70c99a6c57" package="PEAR2\Net\RouterOS">
    <docblock>
      <description>RouterOS API client implementation.</description>
      <long-description>&lt;p&gt;This package allows you to read and write information from a RouterOS host using MikroTik's RouterOS API.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;
</long-description>
      <tag name="category" description="Net" line="3"/>
      <tag name="package" description="PEAR2_Net_RouterOS" line="3"/>
      <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="3"/>
      <tag name="copyright" description="2011 Vasil Rangelov" line="3"/>
      <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="3"/>
      <tag name="version" description="1.0.0b1" line="3"/>
      <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="3"/>
    </docblock>
    <class final="false" abstract="false" line="34" namespace="PEAR2\Net\RouterOS" package="PEAR2\Net\RouterOS">
      <name>UnexpectedValueException</name>
      <extends>\UnexpectedValueException</extends>
      <full_name>\PEAR2\Net\RouterOS\UnexpectedValueException</full_name>
      <docblock>
        <description>Exception thrown when encountering something not supported by RouterOS or
this package.</description>
        <long-description>
</long-description>
        <tag name="category" description="Net" line="24"/>
        <tag name="package" description="PEAR2_Net_RouterOS" line="24"/>
        <tag name="author" description="Vasil Rangelov &lt;boen.robot@gmail.com&gt;" line="24"/>
        <tag name="license" description="http://www.gnu.org/copyleft/lesser.html LGPL License 2.1" line="24"/>
        <tag name="link" description="http://netrouteros.sourceforge.net/" link="http://netrouteros.sourceforge.net/" line="24"/>
      </docblock>
      <implements>\PEAR2\Net\RouterOS\Exception</implements>
      <property final="false" static="false" visibility="private" line="42" package="PEAR2_Net_Transmitter">
        <name>$_value</name>
        <default>null</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag name="var" description="The unexpected value." type="mixed" line="38">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="53" package="PEAR2_Net_Transmitter">
        <name>__construct</name>
        <docblock>
          <description>Creates a new UnexpectedValueException.</description>
          <long-description>
</long-description>
          <tag name="param" description="The Exception message to throw." type="string" variable="$message" line="44">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="The Exception code." type="int" variable="$code" line="44">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="The previous exception used for the exception chaining." type="\PEAR2\Net\RouterOS\Exception" variable="$previous" line="44">
            <type by_reference="false">\PEAR2\Net\RouterOS\Exception</type>
          </tag>
          <tag name="param" description="The unexpected value." type="mixed" variable="$value" line="44">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="53">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="53">
          <name>$previous</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="65" package="PEAR2_Net_Transmitter">
        <name>getValue</name>
        <docblock>
          <description>Gets the unexpected value.</description>
          <long-description>
</long-description>
          <tag name="return" description="The unexpected value." type="mixed" line="60">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="78" package="PEAR2_Net_Transmitter">
        <name>__toString</name>
        <docblock>
          <description>Returns a string representation of the exception.</description>
          <long-description>
</long-description>
          <tag name="return" description="The exception as a string." type="string" line="73">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <package name="PEAR2">
    <package name="Net">
      <package name="RouterOS"/>
    </package>
  </package>
  <package name="PEAR2_Net_Transmitter"/>
  <namespace name="PEAR2">
    <namespace name="Net">
      <namespace name="RouterOS"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
